name: analysis core ci

on:
    workflow_dispatch:   
    pull_request:
        types:
            - opened
            - synchronize 
    push:
        branches:
            - master

permissions:
    id-token: write
    contents: read

jobs:
    lint:
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/master' }}
        runs-on: ubuntu-latest
        env:
            REPO_DIR: /opt/analysis-core
        steps:
            - uses: actions/checkout@v4

            - name: Run lint
              run: |
                docker build --build-arg REPO_DIR="$REPO_DIR" --target setup-env -t lint-image .
                docker run --name lint-container lint-image
            
            - name: Display lint errors
              if: failure()
              run: |
                docker cp lint-container:"$REPO_DIR"/lint.log .
                while IFS= read -r LINT_MSG; do echo "::warning::${LINT_MSG}"; done < lint.log
                exit 1

    publish:
        needs: lint
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            
            - uses: actions/setup-java@v3
              with:
                java-version: '11'
                distribution: 'temurin'

            - name: Build JAR
              run: mvn --batch-mode --update-snapshots verify

            - name: Prepare Artifact
              run: |
                mkdir staging
                cp target/*.jar staging

            - uses: actions/upload-artifact@v3
              with:
                name: Package
                path: staging

    docker-build:
        needs: publish
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Download JAR Artifact
              uses: actions/download-artifact@v4
              with:
                name: Package
                path: staging

            - uses: docker/setup-buildx-action@v3
            
            - uses: docker/build-push-action@v5
              with:
                context: .
                file: Dockerfile
                tags: tmp-tag
                outputs: type=docker,dest=/tmp/image.tar

            - uses: actions/upload-artifact@v4
              with:
                name: image-artifact
                path: /tmp/image.tar

    docker-push:
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        needs: [publish, docker-build]
        runs-on: ubuntu-latest
        steps:
            - uses: actions/download-artifact@v4
              with:
                name: image-artifact
                path: /tmp

            - id: get-hash
              run: |
                FULL_SHA=${{ github.sha }}
                echo "SHORT_SHA=${FULL_SHA:0:7}" >> $GITHUB_OUTPUT
            
            - env:
                AWS_REGION: us-east-1
              uses: aws-actions/configure-aws-credentials@v4
              with:
                role-to-assume: ${{ vars.AWS_ROLE }}
                aws-region: ${{ env.AWS_REGION }}
    
            - id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
              with:
                registry-type: public

            - env:
                AWS_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
